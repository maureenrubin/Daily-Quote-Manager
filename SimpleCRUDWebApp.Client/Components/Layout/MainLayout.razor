@using DailyQuoteManager.Client.InterfacesClient.Auth


@inherits LayoutComponentBase

@inject AuthenticationStateProvider AuthStateProvider
@inject IAuthClientService AuthService
@inject NavigationManager NavigationManager


<MudThemeProvider />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="4">
        <MudText Typo="Typo.h6" Class="mr-4"> Daily Quote Manager </MudText>
        <MudSpacer />

        <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="LogoutAsync">Logout</MudButton>
    </MudAppBar>

    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.Large" Class="mt-4">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {

    [Inject] IJSRuntime jSRuntime { get; set; } = default!;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var token = await jSRuntime.InvokeAsync<string>("getCookie", "_accessToken");
        }
    }



    private async Task LogoutAsync()
    {
        await AuthService.LogoutAsync();
        NavigationManager.NavigateTo("/login", forceLoad: true);
    }
}
